<?php

/**
 * BaseCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property bigint $parent_id
 * @property Category $Parent
 * @property Doctrine_Collection $Subcategories
 * @property Doctrine_Collection $Conferences
 * @property Doctrine_Collection $ConferenceCategory
 * 
 * @method string              getName()               Returns the current record's "name" value
 * @method bigint              getParentId()           Returns the current record's "parent_id" value
 * @method Category            getParent()             Returns the current record's "Parent" value
 * @method Doctrine_Collection getSubcategories()      Returns the current record's "Subcategories" collection
 * @method Doctrine_Collection getConferences()        Returns the current record's "Conferences" collection
 * @method Doctrine_Collection getConferenceCategory() Returns the current record's "ConferenceCategory" collection
 * @method Category            setName()               Sets the current record's "name" value
 * @method Category            setParentId()           Sets the current record's "parent_id" value
 * @method Category            setParent()             Sets the current record's "Parent" value
 * @method Category            setSubcategories()      Sets the current record's "Subcategories" collection
 * @method Category            setConferences()        Sets the current record's "Conferences" collection
 * @method Category            setConferenceCategory() Sets the current record's "ConferenceCategory" collection
 * 
 * @package    platforms
 * @subpackage model
 * @author     Joerg Basedow <jbasedow@mindworks.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCategory extends mwDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'regexp' => '/^[\\w\\d]+$/',
             'length' => 255,
             ));
        $this->hasColumn('parent_id', 'bigint', null, array(
             'type' => 'bigint',
             ));


        $this->index('name_unique', array(
             'fields' => 
             array(
              'name' => 
              array(
              ),
             ),
             'type' => 'unique',
             ));
        $this->option('orderBy', 'name');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasMany('Category as Subcategories', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('Conference as Conferences', array(
             'refClass' => 'ConferenceCategory',
             'local' => 'category_id',
             'foreign' => 'conference_id'));

        $this->hasMany('ConferenceCategory', array(
             'local' => 'id',
             'foreign' => 'category_id'));
    }
}