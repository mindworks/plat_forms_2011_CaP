<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property bigint $sender_id
 * @property bigint $receiver_id
 * @property enum $status
 * @property sfGuardUser $Sender
 * @property sfGuardUser $Receiver
 * 
 * @method bigint      getSenderId()    Returns the current record's "sender_id" value
 * @method bigint      getReceiverId()  Returns the current record's "receiver_id" value
 * @method enum        getStatus()      Returns the current record's "status" value
 * @method sfGuardUser getSender()      Returns the current record's "Sender" value
 * @method sfGuardUser getReceiver()    Returns the current record's "Receiver" value
 * @method Contact     setSenderId()    Sets the current record's "sender_id" value
 * @method Contact     setReceiverId()  Sets the current record's "receiver_id" value
 * @method Contact     setStatus()      Sets the current record's "status" value
 * @method Contact     setSender()      Sets the current record's "Sender" value
 * @method Contact     setReceiver()    Sets the current record's "Receiver" value
 * 
 * @package    platforms
 * @subpackage model
 * @author     Joerg Basedow <jbasedow@mindworks.de>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends mwDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('sender_id', 'bigint', null, array(
             'type' => 'bigint',
             'primary' => true,
             ));
        $this->hasColumn('receiver_id', 'bigint', null, array(
             'type' => 'bigint',
             'primary' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'in_contact',
              1 => 'RCD_sent',
              2 => 'RCD_received',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Sender', array(
             'local' => 'sender_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Receiver', array(
             'local' => 'receiver_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
             ),
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}